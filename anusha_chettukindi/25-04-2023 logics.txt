LOGIC TO PRINT IF SYMMETRIC OR PALINDROME ANAGRAM 
s="anutsanu"
n=len(s)//2
dict={}
for i in s:
    if i in dict:
        dict[i]+=1
    else:
        dict[i]=1
count=0
for i in dict:
    if(dict[i]%2!=0):
        count=count+1
if s[:n:]==s[n:len(s):]:
    print("symmetric")
elif (count<=1):
        print("anagram palindrome")
else:
    print("not a palindrone and not a symmetric")
------------------------------------------------
LOGIC TO PRINT THE WORDS IN A SENTENCE IN REVERSE ORDER
s="anusha chettukindi is here"
s1=s.split()
l=''.join([s1[i]+" " for i in range(-1,-4,-1)])
print(l)

LOGIC-2
s="anusha chettukindi is here"
s1=""
l=[]
for i in s:
    if i==' ':
        l=l+[s1]
        s1=""
    s1=s1+i
l=l+[s1]
result=''.join([l[i]+" " for i in range(-1,-len(l)-1,-1)])
print(result)
OUTPUT:
here  is  chettukindi anusha
-----------------------------
CODE IN C
--------------------------------------
#include <stdio.h>
#include<string.h>

int main() {
   char s[100]="anusha is here";
   
  char w[20];
  int i,j;
  for(int i=strlen(s)-1,j=0;i>=0;i--){
      if(s[i]!=' '){
          w[j]=s[i];
          j++;
      }
      else{
          w[j]='\0';
          for(int k=strlen(w)-1;k>=0;k--){
              printf("%c",w[k]);
          }
          printf(" ");
          j=0;
      }
  }
  for(int k=strlen(w)-1;k>=0;k--){
              printf("%c",w[k]);
          }
}

LOGIC-2:
#include <stdio.h>

void reverseIndiv(char s[], int start, int end) {
    while (start < end) {
        char temp = s[start];
        s[start] = s[end];
        s[end] = temp;
        start++;
        end--;
    }
}

void reverseWords(char s[], int len) {
    reverseIndiv(s, 0, len - 1);
    int start = 0;
    for (int i = 0; i < len; i++) {
        if (s[i] == ' ') {
            reverseIndiv(s, start, i - 1);
            start = i + 1;
        }
    }
    reverseIndiv(s, start, len - 1);
}

int main() {
    char s[] = "anusha is";
    int len = sizeof(s) / sizeof(char);
    reverseWords(s, len - 1);
    printf("%s", s);
    return 0;
}

---------------------------------------------------------
LOGIC TO PRINT IF SYMMETRIC OR PALINDROME
LOGIC-1
THIS IS NORMAL PALINDROME
s="sotso"
n=len(s)//2
if s[:n:]==s[n:len(s):]:
    print("symmetric")
elif s==s[::-1]:
        print("palindrome")
else:
    print("not a palindrone and not a symmetric")

LOGIC-2
NEED TO COMPARE THE STRINGS IN SAME SYMMETRIC WAY BY SPLITTING THE STRING 
NEED TO DO REVERSE OF THE SECOND PART AND COMPARE IT WITH FIRST PART IF IT IS EQUAL PALINDROME

s="sossos"
n=len(s)//2
if s[:n:]==s[n:len(s):] and s[:n:]==s[-1:-n-1:-1]:
    print("it is symmetric as well as palindrome")
elif s[:n:]==s[n:len(s):]:
    print("symmetric")
elif s[:n:]==s[-1:-n-1:-1]:
    print("palindrome")
else:
    print("not a palindrone and not a symmetric")
