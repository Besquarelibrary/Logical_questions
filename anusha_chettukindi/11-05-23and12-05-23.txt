PROGRAM TO PRINT THE MAJORITY NUMBERS IN A LIST

DESCRIPTION: A number is said to be major when that frequency of that number should greater than the len(list)//2

PROGRAM:

#create the list
l=[1,1,1,1,2,2]
#To store the half the value of length of list
mid=len(l)//2
# creating dictionary for storing the element as key and that frequency as value
dict={}
for i in l:
    if i in dict:
        dict[i]+=1
    else:
        dict[i]=1
print(dict)
max=0
#this is to find the max frequency element in the dictionary
for i,j in dict.items():
    if j>max:
        index=i
        max=j
#checking the condition that maximum is greater the mid or not
if(max>mid):
    print(index,"is majority number")
else:
    print("there is no major number in the given list")

OUTPUT:
{1: 4, 2: 2}
1 is majority number
------------------------------------------------------------------------------------
LOGIC IN C

#include <stdio.h>

int main() {
    //initialize an array
    int a[9] = {1,2,2,3,1,1,2};
    //size of array
    int n = sizeof(a) / sizeof(a[0]);
    
    //sort an array using bubble sort 
    for (int i = 0; i < n-1; i++) {
        for (int j = i+1; j < n; j++) {
            if (a[i] > a[j]) {
                //temp for swapping an array
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
    int count = 1;
    int max=0;//to find the max accurance of an array
    int val=0;//
    for (int i = 1; i < n; i++) {
        if (a[i] == a[i-1]) {
            count += 1;
        } else {
            if(max<count){
                max=count;
                val=a[i-1];
            }
            else{
                count = 1;
            }
        }
    }
    //this is for last element in an array
    if(max<count){
        max=count;
        val=a[n-1];
    }
    //to check whether the element accurance count greater than the half of length of array ..// major number in an array
    if(max>9/2){
        printf("%d is the majority number",val);
    }
    else{
        printf("there is no majority numbers in this array");
    }
}

OUTPUT:
2 is the majority number
-------------------------------------------------------------------------------------
PROGRAM TO PRINT THE WHETHER THE ELEMENTS IN THE LIST ARE PERFECT OR NOT

DEscription: A number is said to be perfect when the sum of the factors of the number should equal to the actual number

PROGRAM:

#create the list
l=[7,28,1,12,6,2]
#create the function for finding the perfect number 
def perfect_num(n):
    #To store sum of the factors of that number
    sum=0
    #range upto half of the length of list because the factors of any number should not exist after a mid
    for i in range(1,(n//2)+1):
        #condition for perfect square
        if(n%i==0):
            sum=sum+i
    #check whether sum of the factors of that that number is equal to the actual number
    if(sum==n):
        print(n,"is a perfect number")
    else:
        print(n,"is not a perfect number")
#loop for iterating the every element in the list
for i in l:
    #function call to check every element is perfect or not
    perfect_num(i);

OUTPUT:
7 is not a perfect number
28 is a perfect number
1 is not a perfect number
12 is not a perfect number
6 is a perfect number
2 is not a perfect number
